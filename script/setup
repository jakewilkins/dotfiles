#!/bin/bash

set -e

SCRIPT_SETUP="$0"
SETUP_DIRECTORY=$(dirname $SCRIPT_SETUP)

cd $SETUP_DIRECTORY/..
DOTFILES_PATH=$(pwd -P)

FILES_TO_SYMLINK=(config gemrc pryrc tmux tmux-macos.conf tmux.conf)

# If the config directory already exists, then just symlink all of
# the contents instead.
if [ -d "${HOME}/.config" ]; then
	for CONFIG_FILE in $DOTFILES_PATH/config/*; do
		ln -sfv $CONFIG_FILE $HOME/.config/$(basename $CONFIG_FILE)
	done

	# Remove config from list since we've symlinked the contents.
	unset FILES_TO_SYMLINK[0]
fi

for FILE in "${FILES_TO_SYMLINK[@]}"; do
	ln -sf "${DOTFILES_PATH}/${FILE}" "${HOME}/.${FILE}"
done

[ $(uname -s) = "Linux" ] && export LINUX=1

if [ $LINUX ]; then
	apt-get update -y && apt-get install -y build-essential procps curl file git
fi

CI=1 /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

if [ $LINUX ]; then
	echo 'eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"' >> "${HOME}/.profile"
	eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
fi

brew bundle --file ./homebrew/Brewfile

if [ $LINUX ]; then
	brew bundle --file homebrew/Brewfile.linux
else
	brew bundle --file homebrew/Brewfile.darwin
fi

# Bring in all of our submodule dependencies
git submodule init && git submodule update

# Codespaces has a .gitconfig already setup, but in order to take advantage of
# the attributes set in /etc/gitconfig we have to explicitly include the path.
if [ $CODESPACES ]; then
	git config --global include.path /etc/gitconfig
fi

sudo chsh -s $(which fish)
